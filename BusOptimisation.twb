<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='xgb_hourly_predictions_clean_by1000.csv (Multiple Connections)' inline='true' name='federated.1rzmslw0sqtg0610q6nsv1wop5t4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='xgb_hourly_predictions_clean_by1000' name='textscan.0a77x5z0jd5kgx18wsum11qkwkla'>
            <connection class='textscan' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='xgb_hourly_predictions_clean_by1000.csv' password='' server='' />
          </named-connection>
          <named-connection caption='xgb_monthly_predictions' name='textscan.06hv4390ac1tvf1f8opff0hm4uv3'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/xgb_monthly_predictions.csv' dataRefreshTime='' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='C:/Users/yaro/AppData/Local/Temp/TableauTemp/0d88lzd0z6bcze1ckdwo203i2taz/xgb_monthly_predictions.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0a77x5z0jd5kgx18wsum11qkwkla' name='xgb_hourly_predictions_clean_by1000.csv' table='[C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\xgb_hourly_predictions_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='integer' name='hour' ordinal='2' />
            <column datatype='string' name='stop_id' ordinal='3' />
            <column datatype='string' name='route_id' ordinal='4' />
            <column datatype='integer' name='trip_count' ordinal='5' />
            <column datatype='real' name='hourly_ratio' ordinal='6' />
            <column datatype='real' name='Predicted_Passengers_1000' ordinal='7' />
            <column datatype='real' name='predicted_passengers' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stop_id]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>stop_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route_id]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>route_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_count]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>trip_count</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hourly_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hourly_ratio]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>hourly_ratio</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Predicted_Passengers_1000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Predicted_Passengers_1000]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>Predicted_Passengers_1000</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_passengers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_passengers]</local-name>
            <parent-name>[xgb_hourly_predictions_clean_by1000.csv]</parent-name>
            <remote-alias>predicted_passengers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Predicted Passengers 1000' datatype='real' name='[Predicted_Passengers_1000]' role='measure' type='quantitative' />
      <column caption='xgb_hourly_predictions_clean_by1000.csv' datatype='table' name='[__tableau_internal_object_id__].[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]' role='measure' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Hourly Ratio' datatype='real' name='[hourly_ratio]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Predicted Passengers' datatype='real' name='[predicted_passengers]' role='measure' type='quantitative' />
      <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      <column caption='Stop Id' datatype='string' name='[stop_id]' role='dimension' type='nominal' />
      <column caption='Trip Count' datatype='integer' name='[trip_count]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/Tableau/xgb_hourly_predictions_clean_by1000.csv (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 03:45:34 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='xgb_hourly_predictions_clean_by1000.csv (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='816938' timestamp-start='2025-04-28 15:45:31.077' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>2</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stop_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stop_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stop_id</remote-alias>
              <ordinal>3</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27732</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route_id</remote-alias>
              <ordinal>4</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>748</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[trip_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_count</remote-alias>
              <ordinal>5</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>751</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hourly_ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hourly_ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hourly_ratio</remote-alias>
              <ordinal>6</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4154</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Predicted_Passengers_1000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Predicted_Passengers_1000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Predicted_Passengers_1000</remote-alias>
              <ordinal>7</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>predicted_passengers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[predicted_passengers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>predicted_passengers</remote-alias>
              <ordinal>8</ordinal>
              <family>xgb_hourly_predictions_clean_by1000.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4154</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='xgb_hourly_predictions_clean_by1000.csv' id='xgb_hourly_predictions_clean_by1000.csv_B76C499B905A4C6A84A144E85906B0D5'>
            <properties context=''>
              <relation connection='textscan.0a77x5z0jd5kgx18wsum11qkwkla' name='xgb_hourly_predictions_clean_by1000.csv' table='[C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\xgb_hourly_predictions_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='integer' name='hour' ordinal='2' />
                  <column datatype='string' name='stop_id' ordinal='3' />
                  <column datatype='string' name='route_id' ordinal='4' />
                  <column datatype='integer' name='trip_count' ordinal='5' />
                  <column datatype='real' name='hourly_ratio' ordinal='6' />
                  <column datatype='real' name='Predicted_Passengers_1000' ordinal='7' />
                  <column datatype='real' name='predicted_passengers' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='xgb_monthly_predictions' inline='true' name='federated.0rrh2dk10key9918w9cz01hhsimh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='xgb_monthly_predictions' name='textscan.16uy2rr0olggsl1a39qkj1fjmm9t'>
            <connection class='textscan' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='xgb_monthly_predictions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.16uy2rr0olggsl1a39qkj1fjmm9t' name='xgb_monthly_predictions.csv' table='[xgb_monthly_predictions#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='YearMonth' ordinal='0' />
            <column datatype='real' name='Predicted_Passengers_1000' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[xgb_monthly_predictions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearMonth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YearMonth]</local-name>
            <parent-name>[xgb_monthly_predictions.csv]</parent-name>
            <remote-alias>YearMonth</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[xgb_monthly_predictions.csv_142BB5832EC74A62939B7623A0492F61]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Predicted_Passengers_1000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Predicted_Passengers_1000]</local-name>
            <parent-name>[xgb_monthly_predictions.csv]</parent-name>
            <remote-alias>Predicted_Passengers_1000</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_monthly_predictions.csv_142BB5832EC74A62939B7623A0492F61]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='YearMonthKey' datatype='string' name='[Calculation_1948088316965621760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([YearMonth - Split 2]) + &quot;-&quot; + RIGHT(&quot;00&quot; + STR([YearMonth - Split 1]), 2)' />
      </column>
      <column caption='Predicted passengers' datatype='real' name='[Calculation_1948088316969017346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Predicted_Passengers_1000]/1000' />
      </column>
      <column caption='Predicted Passengers 1000' datatype='real' name='[Predicted_Passengers_1000]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Month' datatype='integer' name='[YearMonth - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0rrh2dk10key9918w9cz01hhsimh].[YearMonth]'>
        <calculation class='tableau' formula='INT(RIGHT([YearMonth], 2))' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[YearMonth - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0rrh2dk10key9918w9cz01hhsimh].[YearMonth]'>
        <calculation class='tableau' formula='INT(LEFT([YearMonth], 4))' />
      </column>
      <column caption='Year Month' datatype='string' name='[YearMonth]' role='dimension' type='nominal' />
      <column caption='xgb_monthly_predictions.csv' datatype='table' name='[__tableau_internal_object_id__].[xgb_monthly_predictions.csv_142BB5832EC74A62939B7623A0492F61]' role='measure' type='quantitative' />
      <column-instance column='[Predicted_Passengers_1000]' derivation='Avg' name='[avg:Predicted_Passengers_1000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Predicted_Passengers_1000]' derivation='None' name='[none:Predicted_Passengers_1000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Predicted_Passengers_1000]' derivation='Sum' name='[sum:Predicted_Passengers_1000:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/Tableau/xgb_monthly_predictions.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 03:45:43 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='xgb_monthly_predictions' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2025-04-28 15:45:43.263' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>YearMonth</remote-name>
              <remote-type>129</remote-type>
              <local-name>[YearMonth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YearMonth</remote-alias>
              <ordinal>0</ordinal>
              <family>xgb_monthly_predictions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Predicted_Passengers_1000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Predicted_Passengers_1000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Predicted_Passengers_1000</remote-alias>
              <ordinal>1</ordinal>
              <family>xgb_monthly_predictions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[avg:Passengers_1000_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[cnt:Calculation_1948088316965720065:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Residents Oslo:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[avg:Calculation_2688930455622303744:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[avg:Predicted_Passengers_1000:qk]:1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Passengers_1000_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Calculation_2688930455622303744:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[avg:Predicted_Passengers_1000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[none:Predicted_Passengers_1000:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[sum:Predicted_Passengers_1000:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='YearMonth' />
        <field-sort-custom-order field='Predicted_Passengers_1000' />
        <field-sort-custom-order field='Calculation_1948088316969017346' />
        <field-sort-custom-order field='YearMonth - Split 1' />
        <field-sort-custom-order field='YearMonth - Split 2' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1948088316965621760' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='federated.1i2n3ga0pdz8p511ot08f1ebo8pn'>
        <column caption='Passengers' datatype='real' name='[Calculation_2688930455622303744]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Passengers_1000_Oslo Bus]/1000' />
        </column>
        <column caption='Passengers 1000 Oslo Bus' datatype='real' name='[Passengers_1000_Oslo Bus]' role='measure' type='quantitative' />
        <column datatype='real' name='[Residents Oslo]' role='measure' type='quantitative' />
        <column-instance column='[Calculation_2688930455622303744]' derivation='Avg' name='[avg:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_2688930455622303744]' derivation='Sum' name='[sum:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Passengers_1000_Oslo Bus]' derivation='Sum' name='[sum:Passengers_1000_Oslo Bus:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Residents Oslo]' derivation='Sum' name='[sum:Residents Oslo:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='xgb_monthly_predictions.csv' id='xgb_monthly_predictions.csv_142BB5832EC74A62939B7623A0492F61'>
            <properties context=''>
              <relation connection='textscan.16uy2rr0olggsl1a39qkj1fjmm9t' name='xgb_monthly_predictions.csv' table='[xgb_monthly_predictions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='YearMonth' ordinal='0' />
                  <column datatype='real' name='Predicted_Passengers_1000' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='route_action_counts' inline='true' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='route_action_counts' name='textscan.1hxadx20lax12t16c0m6i13rdbg1'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/route_action_counts.csv' dataRefreshTime='' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='C:/Users/yaro/AppData/Local/Temp/TableauTemp/1qfw95v1oayhf211nw4vk1hsmolq/route_action_counts.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1hxadx20lax12t16c0m6i13rdbg1' name='route_action_counts.csv' table='[C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\route_action_counts#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:E330:no:A1:E330:1' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='route_id' ordinal='0' />
            <column datatype='integer' name='Add 1 extra bus' ordinal='1' />
            <column datatype='integer' name='Add 2 extra buses' ordinal='2' />
            <column datatype='integer' name='Explore delay' ordinal='3' />
            <column datatype='integer' name='No action needed' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[route_action_counts.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E330:no:A1:E330:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route_id]</local-name>
            <parent-name>[route_action_counts.csv]</parent-name>
            <remote-alias>route_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Add 1 extra bus</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Add 1 extra bus]</local-name>
            <parent-name>[route_action_counts.csv]</parent-name>
            <remote-alias>Add 1 extra bus</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Add 2 extra buses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Add 2 extra buses]</local-name>
            <parent-name>[route_action_counts.csv]</parent-name>
            <remote-alias>Add 2 extra buses</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explore delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Explore delay]</local-name>
            <parent-name>[route_action_counts.csv]</parent-name>
            <remote-alias>Explore delay</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No action needed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No action needed]</local-name>
            <parent-name>[route_action_counts.csv]</parent-name>
            <remote-alias>No action needed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Add 1 extra bus]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Add 2 extra buses]' role='measure' type='quantitative' />
      <column caption='Condition all actions' datatype='integer' name='[Calculation_1767662857921413120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Add 1 extra bus] + [Add 2 extra buses] + [Explore delay]' />
      </column>
      <column datatype='integer' name='[Explore delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No action needed]' role='measure' type='quantitative' />
      <column caption='route_action_counts.csv' datatype='table' name='[__tableau_internal_object_id__].[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]' role='measure' type='quantitative' />
      <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Add 1 extra bus]' derivation='Avg' name='[avg:Add 1 extra bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Add 2 extra buses]' derivation='Avg' name='[avg:Add 2 extra buses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explore delay]' derivation='Avg' name='[avg:Explore delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No action needed]' derivation='Avg' name='[avg:No action needed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
      <column-instance column='[Add 1 extra bus]' derivation='Sum' name='[sum:Add 1 extra bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Add 2 extra buses]' derivation='Sum' name='[sum:Add 2 extra buses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1767662857921413120]' derivation='Sum' name='[sum:Calculation_1767662857921413120:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Explore delay]' derivation='Sum' name='[sum:Explore delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No action needed]' derivation='Sum' name='[sum:No action needed:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/Tableau/route_action_counts.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 04:41:22 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='route_action_counts' increment-value='%null%' refresh-type='create' rows-inserted='329' timestamp-start='2025-04-28 16:41:21.791' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>route_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route_id</remote-alias>
              <ordinal>0</ordinal>
              <family>route_action_counts.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>329</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Add 1 extra bus</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Add 1 extra bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Add 1 extra bus</remote-alias>
              <ordinal>1</ordinal>
              <family>route_action_counts.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Add 2 extra buses</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Add 2 extra buses]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Add 2 extra buses</remote-alias>
              <ordinal>2</ordinal>
              <family>route_action_counts.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Explore delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Explore delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Explore delay</remote-alias>
              <ordinal>3</ordinal>
              <family>route_action_counts.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No action needed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[No action needed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No action needed</remote-alias>
              <ordinal>4</ordinal>
              <family>route_action_counts.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:route_id:nk]'>
          <groupfilter function='level-members' level='[none:route_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[avg:Add 1 extra bus:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Add 1 extra bus:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[__tableau_internal_object_id__].[cnt:route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[avg:No action needed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:No action needed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[avg:Explore delay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Explore delay:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[avg:Add 2 extra buses:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Add 2 extra buses:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:route_id:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;RUT:Line:70&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2044&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2133&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2139&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2177&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:220&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2210&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:23&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2470&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:2636&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:300&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3110&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3172&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3175&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:321&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3374&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:350&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3532&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3575&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3633&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3641&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3659&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:375&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:381&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:396&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3969&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:3981&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:510&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:535&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:565&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:58&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:62&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;RUT:Line:9931&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:1672&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2031&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2032&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2072&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2078&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2131&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2171&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2255&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2265&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2634&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2642&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:2732&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:286&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:3075&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:3080&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:31&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:340&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:360&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:3652&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:3657&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:3871&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:3911&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:45&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:452&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:455&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:505&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:525&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:536&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:80&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:83&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;RUT:Line:9842&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:1132&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:140&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:1631&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:1632&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2043&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2073&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2081&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2135&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2141&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2160&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:24&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2640&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:265&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2734&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:290&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:2933&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3140&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3371&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3431&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3640&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:366&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3676&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3902&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:397&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:3983&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:485&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:550&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:585&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:65&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:67&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:73&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;RUT:Line:75&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;RUT:Line:100&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;RUT:Line:480&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;RUT:Line:385&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:1210&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:1572&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2018&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2074&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2082&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2140&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2145&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2148&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2175&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:235&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:2540&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:281&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3073&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:320&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3331&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:335&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3500&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3545&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3771&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:390&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3901&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3905&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:3970&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:426&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:506&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:51&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:540&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:66&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:72&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:74&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;RUT:Line:76&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:1431&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:1533&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:2042&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:2076&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:2079&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:2505&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:260&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:261&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:2631&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:2635&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3081&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:330&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3334&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3533&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3658&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3780&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:380&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3837&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3872&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3874&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:3904&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:395&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:40&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:451&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:533&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:54&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:575&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:68&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:69&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:79&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:84&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;RUT:Line:85&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:1436&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:150&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2033&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2041&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2215&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2250&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2633&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2731&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:28&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2871&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:2873&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3130&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:34&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3639&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3643&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3734&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3735&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3740&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3772&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:3839&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:386&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:400&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:42&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:441&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:445&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:453&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:46&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:515&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:516&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:561&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:63&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;RUT:Line:81&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;RUT:Line:270&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;RUT:Line:3017&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:1671&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:20&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2015&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2045&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2056&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2143&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2150&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2370&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:240&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2400&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:250&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2545&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2632&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2671&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2850&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:2931&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3077&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3531&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3574&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3634&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3637&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3737&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:3833&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:442&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:443&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:460&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:490&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:500&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:520&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:521&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:526&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;RUT:Line:560&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;RUT:Line:410&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:1331&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:2047&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:21&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:2146&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:256&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:2560&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:26&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:2630&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:2639&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:2733&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:275&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:280&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:285&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3636&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3638&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3644&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3686&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:370&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3743&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3773&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:3919&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:41&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:420&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:425&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:430&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:446&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:5260&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:530&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:551&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:56&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:570&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;RUT:Line:78&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:120&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:1333&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:1432&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:145&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:1571&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2075&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2132&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2142&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:230&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2390&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:245&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2641&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2673&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:2932&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3115&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3131&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:315&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:345&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3534&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3535&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:37&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3742&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3834&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3903&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3912&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:3963&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:4073&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:470&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:576&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:580&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:64&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;RUT:Line:87&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;RUT:Line:440&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;RUT:Line:71&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;RUT:Line:450&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;RUT:Line:110&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:1215&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:130&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:160&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2077&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2134&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2137&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2138&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2172&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2300&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:25&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:251&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2565&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:2840&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:30&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:310&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3125&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3240&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3250&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3333&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3335&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3538&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3571&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:365&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3674&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3682&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3731&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:3838&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:405&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:448&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:48&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:60&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;RUT:Line:77&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='route_action_counts.csv' id='route_action_counts.csv_953A6DEBC8FB44FE9D00AD70B4798C70'>
            <properties context=''>
              <relation connection='textscan.1hxadx20lax12t16c0m6i13rdbg1' name='route_action_counts.csv' table='[C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\route_action_counts#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:E330:no:A1:E330:1' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='route_id' ordinal='0' />
                  <column datatype='integer' name='Add 1 extra bus' ordinal='1' />
                  <column datatype='integer' name='Add 2 extra buses' ordinal='2' />
                  <column datatype='integer' name='Explore delay' ordinal='3' />
                  <column datatype='integer' name='No action needed' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Demand Level per Hour by Cluster (k=5)' inline='true' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Demand Level per Hour by Cluster (k=5)' name='textscan.12r2psn0jma93j12ew7f51g3xg7d'>
            <connection class='textscan' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='Demand Level per Hour by Cluster (k=5).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.12r2psn0jma93j12ew7f51g3xg7d' name='Demand Level per Hour by Cluster (k=5).csv' table='[Demand Level per Hour by Cluster (k=5)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='predicted_passengers' ordinal='1' />
            <column datatype='real' name='avg_delay_minutes' ordinal='2' />
            <column datatype='integer' name='cluster' ordinal='3' />
            <column datatype='string' name='demand_level' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Demand Level per Hour by Cluster (k=5).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[Demand Level per Hour by Cluster (k=5).csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_passengers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_passengers]</local-name>
            <parent-name>[Demand Level per Hour by Cluster (k=5).csv]</parent-name>
            <remote-alias>predicted_passengers</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_minutes]</local-name>
            <parent-name>[Demand Level per Hour by Cluster (k=5).csv]</parent-name>
            <remote-alias>avg_delay_minutes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[Demand Level per Hour by Cluster (k=5).csv]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>demand_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[demand_level]</local-name>
            <parent-name>[Demand Level per Hour by Cluster (k=5).csv]</parent-name>
            <remote-alias>demand_level</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Cluster (bin) (1)' datatype='integer' name='[Cluster (bin) 1]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[cluster]' peg='0' size='0.865' />
      </column>
      <column aggregation='None' datatype='integer' name='[Cluster (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[cluster]' peg='0' size='0.865' />
      </column>
      <column caption='Demand Level per Hour by Cluster (k=5).csv' datatype='table' name='[__tableau_internal_object_id__].[Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5]' role='measure' type='quantitative' />
      <column caption='Avg Delay Minutes' datatype='real' name='[avg_delay_minutes]' role='measure' type='quantitative' />
      <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='quantitative' />
      <column caption='Demand Level' datatype='string' name='[demand_level]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
      <column caption='Predicted Passengers' datatype='real' name='[predicted_passengers]' role='measure' type='quantitative' />
      <column-instance column='[cluster]' derivation='Avg' name='[avg:cluster:ok]' pivot='key' type='ordinal' />
      <column-instance column='[demand_level]' derivation='None' name='[none:demand_level:nk]' pivot='key' type='nominal' />
      <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Demand Level)' hidden='true' name='[Action (Demand Level)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[demand_level]' />
        </groupfilter>
      </group>
      <group caption='Action (Demand Level,Hour) 1' hidden='true' name='[Action (Demand Level,Hour) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[demand_level]' />
          <groupfilter function='level-members' level='[hour]' />
        </groupfilter>
      </group>
      <group caption='Action (Demand Level,Hour)' hidden='true' name='[Action (Demand Level,Hour)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[demand_level]' />
          <groupfilter function='level-members' level='[none:hour:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/Tableau/Demand Level per Hour by Cluster (k=5).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 04:41:37 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Demand Level per Hour by Cluster (k=5)' increment-value='%null%' refresh-type='create' rows-inserted='24' timestamp-start='2025-04-28 16:41:36.566' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>0</ordinal>
              <family>Demand Level per Hour by Cluster (k=5).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>predicted_passengers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[predicted_passengers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>predicted_passengers</remote-alias>
              <ordinal>1</ordinal>
              <family>Demand Level per Hour by Cluster (k=5).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_delay_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_delay_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_delay_minutes</remote-alias>
              <ordinal>2</ordinal>
              <family>Demand Level per Hour by Cluster (k=5).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cluster</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cluster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cluster</remote-alias>
              <ordinal>3</ordinal>
              <family>Demand Level per Hour by Cluster (k=5).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>demand_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[demand_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>demand_level</remote-alias>
              <ordinal>4</ordinal>
              <family>Demand Level per Hour by Cluster (k=5).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:hour:ok]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[none:hour:ok]' member='0' />
            <groupfilter function='member' level='[none:hour:ok]' member='1' />
            <groupfilter function='member' level='[none:hour:ok]' member='2' />
            <groupfilter function='member' level='[none:hour:ok]' member='3' />
            <groupfilter function='member' level='[none:hour:ok]' member='4' />
            <groupfilter function='member' level='[none:hour:ok]' member='5' />
            <groupfilter function='member' level='[none:hour:ok]' member='6' />
            <groupfilter function='member' level='[none:hour:ok]' member='7' />
            <groupfilter function='member' level='[none:hour:ok]' member='8' />
            <groupfilter function='member' level='[none:hour:ok]' member='9' />
            <groupfilter function='member' level='[none:hour:ok]' member='10' />
            <groupfilter function='member' level='[none:hour:ok]' member='11' />
            <groupfilter function='member' level='[none:hour:ok]' member='12' />
            <groupfilter function='member' level='[none:hour:ok]' member='13' />
            <groupfilter function='member' level='[none:hour:ok]' member='14' />
            <groupfilter function='member' level='[none:hour:ok]' member='15' />
            <groupfilter function='member' level='[none:hour:ok]' member='16' />
            <groupfilter function='member' level='[none:hour:ok]' member='17' />
            <groupfilter function='member' level='[none:hour:ok]' member='18' />
            <groupfilter function='member' level='[none:hour:ok]' member='19' />
            <groupfilter function='member' level='[none:hour:ok]' member='20' />
            <groupfilter function='member' level='[none:hour:ok]' member='21' />
            <groupfilter function='member' level='[none:hour:ok]' member='22' />
            <groupfilter function='member' level='[none:hour:ok]' member='23' />
          </groupfilter>
          <target field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[avg:cluster:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4.0</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2.2916666666666665</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:demand_level:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Very Low&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Very High&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Demand Level per Hour by Cluster (k=5).csv' id='Demand Level per Hour by Cluster (k=5).csv_8EBFEB9E149E435BB631A2D36FA128B5'>
            <properties context=''>
              <relation connection='textscan.12r2psn0jma93j12ew7f51g3xg7d' name='Demand Level per Hour by Cluster (k=5).csv' table='[Demand Level per Hour by Cluster (k=5)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='hour' ordinal='0' />
                  <column datatype='real' name='predicted_passengers' ordinal='1' />
                  <column datatype='real' name='avg_delay_minutes' ordinal='2' />
                  <column datatype='integer' name='cluster' ordinal='3' />
                  <column datatype='string' name='demand_level' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='xgb_final_merged_rl_without_nan' inline='true' name='federated.0bff73603saw3j1g8xy2l1qgwigk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='xgb_final_merged_rl_without_nan' name='textscan.0d2nhm20l0ksw811flpy709ahgki'>
            <connection class='textscan' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='xgb_final_merged_rl_without_nan.csv' password='' server='' />
          </named-connection>
          <named-connection caption='route_action_counts' name='textscan.0ijfna31elbc2q1augss90uxxbnb'>
            <connection class='textscan' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='route_action_counts.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0d2nhm20l0ksw811flpy709ahgki' name='xgb_final_merged_rl_without_nan.csv' table='[xgb_final_merged_rl_without_nan#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='integer' name='hour' ordinal='2' />
            <column datatype='integer' name='weekday' ordinal='3' />
            <column datatype='string' name='stop_id' ordinal='4' />
            <column datatype='string' name='route_id' ordinal='5' />
            <column datatype='real' name='arrival_delay_minutes' ordinal='6' />
            <column datatype='real' name='departure_delay_minutes' ordinal='7' />
            <column datatype='real' name='air_temperature' ordinal='8' />
            <column datatype='real' name='wind_speed' ordinal='9' />
            <column datatype='real' name='precipitation' ordinal='10' />
            <column datatype='string' name='rounded_hour' ordinal='11' />
            <column datatype='real' name='predicted_passengers' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stop_id]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>stop_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route_id]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>route_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_delay_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arrival_delay_minutes]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>arrival_delay_minutes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_delay_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[departure_delay_minutes]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>departure_delay_minutes</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>air_temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[air_temperature]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>air_temperature</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>wind_speed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipitation]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rounded_hour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rounded_hour]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>rounded_hour</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_passengers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_passengers]</local-name>
            <parent-name>[xgb_final_merged_rl_without_nan.csv]</parent-name>
            <remote-alias>predicted_passengers</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='xgb_final_merged_rl_without_nan.csv' datatype='table' name='[__tableau_internal_object_id__].[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]' role='measure' type='quantitative' />
      <column caption='Air Temperature' datatype='real' name='[air_temperature]' role='measure' type='quantitative' />
      <column caption='Arrival Delay Minutes' datatype='real' name='[arrival_delay_minutes]' role='measure' type='quantitative' />
      <column caption='Departure Delay Minutes' datatype='real' name='[departure_delay_minutes]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Precipitation' datatype='real' name='[precipitation]' role='measure' type='quantitative' />
      <column caption='Predicted Passengers' datatype='real' name='[predicted_passengers]' role='measure' type='quantitative' />
      <column caption='Rounded Hour' datatype='string' name='[rounded_hour]' role='dimension' type='nominal' />
      <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      <column caption='Stop Id' datatype='string' name='[stop_id]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Weekday' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
      <column caption='Wind Speed' datatype='real' name='[wind_speed]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Hour)' hidden='true' name='[Action (Hour)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hour]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/Tableau/xgb_final_merged_rl_without_nan.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 04:43:15 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='xgb_final_merged_rl_without_nan' increment-value='%null%' refresh-type='create' rows-inserted='20541012' timestamp-start='2025-04-28 16:42:44.694' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>2</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekday</remote-alias>
              <ordinal>3</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stop_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stop_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stop_id</remote-alias>
              <ordinal>4</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11888</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route_id</remote-alias>
              <ordinal>5</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>392</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrival_delay_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arrival_delay_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrival_delay_minutes</remote-alias>
              <ordinal>6</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>284</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departure_delay_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[departure_delay_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departure_delay_minutes</remote-alias>
              <ordinal>7</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>air_temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[air_temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>air_temperature</remote-alias>
              <ordinal>8</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1633</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wind_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[wind_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wind_speed</remote-alias>
              <ordinal>9</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1192</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>precipitation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[precipitation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>precipitation</remote-alias>
              <ordinal>10</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rounded_hour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rounded_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rounded_hour</remote-alias>
              <ordinal>11</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1713</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>predicted_passengers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[predicted_passengers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>predicted_passengers</remote-alias>
              <ordinal>12</ordinal>
              <family>xgb_final_merged_rl_without_nan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>989</approx-count>
              <contains-null>true</contains-null>
              <object-id>[xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:hour:ok]'>
          <groupfilter function='level-members' level='[none:hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='xgb_final_merged_rl_without_nan.csv' id='xgb_final_merged_rl_without_nan.csv_867FABBF7135491AA6603A7B5BDC2B32'>
            <properties context=''>
              <relation connection='textscan.0d2nhm20l0ksw811flpy709ahgki' name='xgb_final_merged_rl_without_nan.csv' table='[xgb_final_merged_rl_without_nan#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='integer' name='hour' ordinal='2' />
                  <column datatype='integer' name='weekday' ordinal='3' />
                  <column datatype='string' name='stop_id' ordinal='4' />
                  <column datatype='string' name='route_id' ordinal='5' />
                  <column datatype='real' name='arrival_delay_minutes' ordinal='6' />
                  <column datatype='real' name='departure_delay_minutes' ordinal='7' />
                  <column datatype='real' name='air_temperature' ordinal='8' />
                  <column datatype='real' name='wind_speed' ordinal='9' />
                  <column datatype='real' name='precipitation' ordinal='10' />
                  <column datatype='string' name='rounded_hour' ordinal='11' />
                  <column datatype='real' name='predicted_passengers' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Key_Features_All_Tasks_2023_2024' inline='true' name='federated.1i2n3ga0pdz8p511ot08f1ebo8pn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Key_Features_All_Tasks_2023_2024' name='textscan.0108szb00chvm11ajrubf03tfwur'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\Key_Features_All_Tasks_2023_2024.csv' dataRefreshTime='' directory='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data' filename='C:/Users/yaro/AppData/Local/Temp/TableauTemp/1i26h0706n6ym61gpkli01plq914/Key_Features_All_Tasks_2023_2024.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0108szb00chvm11ajrubf03tfwur' name='Key_Features_All_Tasks_2023_2024.csv' table='[C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\Key_Features_All_Tasks_2023_2024#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:V25:no:A1:V25:1' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='date' name='YearMonth' ordinal='2' />
            <column datatype='real' name='avg_air_temperature' ordinal='3' />
            <column datatype='real' name='avg_precipitation' ordinal='4' />
            <column datatype='real' name='avg_sunshine' ordinal='5' />
            <column datatype='real' name='avg_snow_thickness' ordinal='6' />
            <column datatype='real' name='avg_wind_speed' ordinal='7' />
            <column datatype='real' name='arrival_delay_minutes' ordinal='8' />
            <column datatype='real' name='departure_delay_minutes' ordinal='9' />
            <column datatype='real' name='Residents Oslo' ordinal='10' />
            <column datatype='real' name='Folkevekst_Oslo_personer' ordinal='11' />
            <column datatype='real' name='Trips per Inhabitant_Boardings_Oslo Bus' ordinal='12' />
            <column datatype='real' name='Passengers_1000_Oslo Bus' ordinal='13' />
            <column datatype='real' name='Duration_hours' ordinal='14' />
            <column datatype='real' name='Is_Severe' ordinal='15' />
            <column datatype='integer' name='Incident_Occurred' ordinal='16' />
            <column datatype='real' name='Vehicle Size_Seats_ Oslo Bus' ordinal='17' />
            <column datatype='real' name='Capacity Utilization _%_Oslo Bus' ordinal='18' />
            <column datatype='real' name='Seat Kilometers_1000km_Oslo Bus' ordinal='19' />
            <column datatype='real' name='Space Kilometers_1000_km_Oslo Bus' ordinal='20' />
            <column datatype='real' name='Vehicle Kilometers_1000 km_Oslo Bus' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V25:no:A1:V25:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearMonth</remote-name>
            <remote-type>133</remote-type>
            <local-name>[YearMonth]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>YearMonth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_air_temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_air_temperature]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>avg_air_temperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_precipitation]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>avg_precipitation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sunshine</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sunshine]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>avg_sunshine</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_snow_thickness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_snow_thickness]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>avg_snow_thickness</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_wind_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_wind_speed]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>avg_wind_speed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_delay_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arrival_delay_minutes]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>arrival_delay_minutes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_delay_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[departure_delay_minutes]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>departure_delay_minutes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents Oslo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents Oslo]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Residents Oslo</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Folkevekst_Oslo_personer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Folkevekst_Oslo_personer]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Folkevekst_Oslo_personer</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trips per Inhabitant_Boardings_Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trips per Inhabitant_Boardings_Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Trips per Inhabitant_Boardings_Oslo Bus</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passengers_1000_Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Passengers_1000_Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Passengers_1000_Oslo Bus</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration_hours</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Duration_hours]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Duration_hours</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is_Severe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Is_Severe]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Is_Severe</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident_Occurred</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incident_Occurred]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Incident_Occurred</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Size_Seats_ Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vehicle Size_Seats_ Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Vehicle Size_Seats_ Oslo Bus</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capacity Utilization _%_Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Capacity Utilization _%_Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Capacity Utilization _%_Oslo Bus</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seat Kilometers_1000km_Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seat Kilometers_1000km_Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Seat Kilometers_1000km_Oslo Bus</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Space Kilometers_1000_km_Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Space Kilometers_1000_km_Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Space Kilometers_1000_km_Oslo Bus</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Kilometers_1000 km_Oslo Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vehicle Kilometers_1000 km_Oslo Bus]</local-name>
            <parent-name>[Key_Features_All_Tasks_2023_2024.csv]</parent-name>
            <remote-alias>Vehicle Kilometers_1000 km_Oslo Bus</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[attr:Calculation_1948088316969017346:qk]&quot;' value='Predicted passengers by XGBoost' />
        </aliases>
      </column>
      <column caption='YearMonthKey ' datatype='string' name='[Calculation_1948088316965720065]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([Year]) + &quot;-&quot; + RIGHT(&quot;00&quot; + STR([Month]), 2)' />
      </column>
      <column caption='Passengers' datatype='real' name='[Calculation_2688930455622303744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Passengers_1000_Oslo Bus]/1000' />
      </column>
      <column caption='Capacity Utilization  % Oslo Bus' datatype='real' name='[Capacity Utilization _%_Oslo Bus]' role='measure' type='quantitative' />
      <column caption='Duration hours' datatype='real' name='[Duration_hours]' role='measure' type='quantitative' />
      <column caption='Folkevekst Oslo personer' datatype='real' name='[Folkevekst_Oslo_personer]' role='measure' type='quantitative' />
      <column caption='Incident Occurred' datatype='integer' name='[Incident_Occurred]' role='measure' type='quantitative' />
      <column caption='Is Severe' datatype='real' name='[Is_Severe]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Passengers 1000 Oslo Bus' datatype='real' name='[Passengers_1000_Oslo Bus]' role='measure' type='quantitative' />
      <column datatype='real' name='[Residents Oslo]' role='measure' type='quantitative' />
      <column caption='Seat Kilometers 1000km Oslo Bus' datatype='real' name='[Seat Kilometers_1000km_Oslo Bus]' role='measure' type='quantitative' />
      <column caption='Space Kilometers 1000 km Oslo Bus' datatype='real' name='[Space Kilometers_1000_km_Oslo Bus]' role='measure' type='quantitative' />
      <column caption='Trips per Inhabitant Boardings Oslo Bus' datatype='real' name='[Trips per Inhabitant_Boardings_Oslo Bus]' role='measure' type='quantitative' />
      <column caption='Vehicle Kilometers 1000 km Oslo Bus' datatype='real' name='[Vehicle Kilometers_1000 km_Oslo Bus]' role='measure' type='quantitative' />
      <column caption='Vehicle Size Seats  Oslo Bus' datatype='real' name='[Vehicle Size_Seats_ Oslo Bus]' role='measure' type='quantitative' />
      <column caption='Year Month' datatype='date' name='[YearMonth]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Key_Features_All_Tasks_2023_2024.csv' datatype='table' name='[__tableau_internal_object_id__].[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]' role='measure' type='quantitative' />
      <column caption='Arrival Delay Minutes' datatype='real' name='[arrival_delay_minutes]' role='measure' type='quantitative' />
      <column caption='Avg Air Temperature' datatype='real' name='[avg_air_temperature]' role='measure' type='quantitative' />
      <column caption='Avg Precipitation' datatype='real' name='[avg_precipitation]' role='measure' type='quantitative' />
      <column caption='Avg Snow Thickness' datatype='real' name='[avg_snow_thickness]' role='measure' type='quantitative' />
      <column caption='Avg Sunshine' datatype='real' name='[avg_sunshine]' role='measure' type='quantitative' />
      <column caption='Avg Wind Speed' datatype='real' name='[avg_wind_speed]' role='measure' type='quantitative' />
      <column caption='Departure Delay Minutes' datatype='real' name='[departure_delay_minutes]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2688930455622303744]' derivation='Attribute' name='[attr:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2688930455622303744]' derivation='Avg' name='[avg:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2688930455622303744]' derivation='None' name='[none:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2688930455622303744]' derivation='Sum' name='[sum:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Capacity Utilization _%_Oslo Bus]' derivation='Sum' name='[sum:Capacity Utilization _%_Oslo Bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration_hours]' derivation='Sum' name='[sum:Duration_hours:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Folkevekst_Oslo_personer]' derivation='Sum' name='[sum:Folkevekst_Oslo_personer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Incident_Occurred]' derivation='Sum' name='[sum:Incident_Occurred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Is_Severe]' derivation='Sum' name='[sum:Is_Severe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Passengers_1000_Oslo Bus]' derivation='Sum' name='[sum:Passengers_1000_Oslo Bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residents Oslo]' derivation='Sum' name='[sum:Residents Oslo:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Seat Kilometers_1000km_Oslo Bus]' derivation='Sum' name='[sum:Seat Kilometers_1000km_Oslo Bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Space Kilometers_1000_km_Oslo Bus]' derivation='Sum' name='[sum:Space Kilometers_1000_km_Oslo Bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trips per Inhabitant_Boardings_Oslo Bus]' derivation='Sum' name='[sum:Trips per Inhabitant_Boardings_Oslo Bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vehicle Kilometers_1000 km_Oslo Bus]' derivation='Sum' name='[sum:Vehicle Kilometers_1000 km_Oslo Bus:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arrival_delay_minutes]' derivation='Sum' name='[sum:arrival_delay_minutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_air_temperature]' derivation='Sum' name='[sum:avg_air_temperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_precipitation]' derivation='Sum' name='[sum:avg_precipitation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_snow_thickness]' derivation='Sum' name='[sum:avg_snow_thickness:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_sunshine]' derivation='Sum' name='[sum:avg_sunshine:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_wind_speed]' derivation='Sum' name='[sum:avg_wind_speed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[departure_delay_minutes]' derivation='Sum' name='[sum:departure_delay_minutes:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/yaro/OneDrive/Skrivebord/Noroff/BP/Data/Tableau/Key_Features_All_Tasks_2023_2024.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 04:41:48 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Key_Features_All_Tasks_2023_2024' increment-value='%null%' refresh-type='create' rows-inserted='24' timestamp-start='2025-04-28 16:41:47.473' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>1</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YearMonth</remote-name>
              <remote-type>133</remote-type>
              <local-name>[YearMonth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YearMonth</remote-alias>
              <ordinal>2</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_air_temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_air_temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_air_temperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_precipitation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_precipitation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_precipitation</remote-alias>
              <ordinal>4</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_sunshine</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_sunshine]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_sunshine</remote-alias>
              <ordinal>5</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_snow_thickness</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_snow_thickness]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_snow_thickness</remote-alias>
              <ordinal>6</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_wind_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_wind_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_wind_speed</remote-alias>
              <ordinal>7</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrival_delay_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arrival_delay_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrival_delay_minutes</remote-alias>
              <ordinal>8</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departure_delay_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[departure_delay_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departure_delay_minutes</remote-alias>
              <ordinal>9</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residents Oslo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Residents Oslo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residents Oslo</remote-alias>
              <ordinal>10</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Folkevekst_Oslo_personer</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Folkevekst_Oslo_personer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Folkevekst_Oslo_personer</remote-alias>
              <ordinal>11</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trips per Inhabitant_Boardings_Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Trips per Inhabitant_Boardings_Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trips per Inhabitant_Boardings_Oslo Bus</remote-alias>
              <ordinal>12</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Passengers_1000_Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Passengers_1000_Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Passengers_1000_Oslo Bus</remote-alias>
              <ordinal>13</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Duration_hours</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Duration_hours]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Duration_hours</remote-alias>
              <ordinal>14</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Is_Severe</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Is_Severe]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Is_Severe</remote-alias>
              <ordinal>15</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident_Occurred</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Incident_Occurred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident_Occurred</remote-alias>
              <ordinal>16</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle Size_Seats_ Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Vehicle Size_Seats_ Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle Size_Seats_ Oslo Bus</remote-alias>
              <ordinal>17</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Capacity Utilization _%_Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Capacity Utilization _%_Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Capacity Utilization _%_Oslo Bus</remote-alias>
              <ordinal>18</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Seat Kilometers_1000km_Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Seat Kilometers_1000km_Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Seat Kilometers_1000km_Oslo Bus</remote-alias>
              <ordinal>19</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Space Kilometers_1000_km_Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Space Kilometers_1000_km_Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Space Kilometers_1000_km_Oslo Bus</remote-alias>
              <ordinal>20</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle Kilometers_1000 km_Oslo Bus</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Vehicle Kilometers_1000 km_Oslo Bus]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle Kilometers_1000 km_Oslo Bus</remote-alias>
              <ordinal>21</ordinal>
              <family>Key_Features_All_Tasks_2023_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:departure_delay_minutes:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[attr:Calculation_2688930455622303744:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[avg:Calculation_2688930455622303744:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_2688930455622303744:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:arrival_delay_minutes:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Calculation_2688930455622303744:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:avg_sunshine:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Is_Severe:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Duration_hours:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:avg_wind_speed:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Trips per Inhabitant_Boardings_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:avg_air_temperature:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Seat Kilometers_1000km_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Capacity Utilization _\%_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Passengers_1000_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Space Kilometers_1000_km_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Vehicle Kilometers_1000 km_Oslo Bus:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[attr:Calculation_1948088316969017346:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[avg:Calculation_1948088316969017346:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[sum:Calculation_1948088316969017346:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Folkevekst_Oslo_personer:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[__tableau_internal_object_id__].[cnt:Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:avg_precipitation:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Residents Oslo:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:Incident_Occurred:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[sum:avg_snow_thickness:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='YearMonth' />
        <field-sort-custom-order field='avg_air_temperature' />
        <field-sort-custom-order field='avg_precipitation' />
        <field-sort-custom-order field='avg_sunshine' />
        <field-sort-custom-order field='avg_snow_thickness' />
        <field-sort-custom-order field='avg_wind_speed' />
        <field-sort-custom-order field='arrival_delay_minutes' />
        <field-sort-custom-order field='departure_delay_minutes' />
        <field-sort-custom-order field='Residents Oslo' />
        <field-sort-custom-order field='Folkevekst_Oslo_personer' />
        <field-sort-custom-order field='Trips per Inhabitant_Boardings_Oslo Bus' />
        <field-sort-custom-order field='Passengers_1000_Oslo Bus' />
        <field-sort-custom-order field='Calculation_2688930455622303744' />
        <field-sort-custom-order field='Duration_hours' />
        <field-sort-custom-order field='Is_Severe' />
        <field-sort-custom-order field='Incident_Occurred' />
        <field-sort-custom-order field='Vehicle Size_Seats_ Oslo Bus' />
        <field-sort-custom-order field='Capacity Utilization _%_Oslo Bus' />
        <field-sort-custom-order field='Seat Kilometers_1000km_Oslo Bus' />
        <field-sort-custom-order field='Space Kilometers_1000_km_Oslo Bus' />
        <field-sort-custom-order field='Vehicle Kilometers_1000 km_Oslo Bus' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='federated.0rrh2dk10key9918w9cz01hhsimh'>
        <column caption='Predicted passengers' datatype='real' name='[Calculation_1948088316969017346]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Predicted_Passengers_1000]/1000' />
        </column>
        <column-instance column='[Calculation_1948088316969017346]' derivation='Attribute' name='[attr:Calculation_1948088316969017346:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1948088316969017346]' derivation='Sum' name='[sum:Calculation_1948088316969017346:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Key_Features_All_Tasks_2023_2024.csv' id='Key_Features_All_Tasks_2023_2024.csv_AFC6060F85E2400DBE375CBD7E00DFD5'>
            <properties context=''>
              <relation connection='textscan.0108szb00chvm11ajrubf03tfwur' name='Key_Features_All_Tasks_2023_2024.csv' table='[C:\Users\yaro\OneDrive\Skrivebord\Noroff\BP\Data\Key_Features_All_Tasks_2023_2024#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:V25:no:A1:V25:1' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Month' ordinal='1' />
                  <column datatype='date' name='YearMonth' ordinal='2' />
                  <column datatype='real' name='avg_air_temperature' ordinal='3' />
                  <column datatype='real' name='avg_precipitation' ordinal='4' />
                  <column datatype='real' name='avg_sunshine' ordinal='5' />
                  <column datatype='real' name='avg_snow_thickness' ordinal='6' />
                  <column datatype='real' name='avg_wind_speed' ordinal='7' />
                  <column datatype='real' name='arrival_delay_minutes' ordinal='8' />
                  <column datatype='real' name='departure_delay_minutes' ordinal='9' />
                  <column datatype='real' name='Residents Oslo' ordinal='10' />
                  <column datatype='real' name='Folkevekst_Oslo_personer' ordinal='11' />
                  <column datatype='real' name='Trips per Inhabitant_Boardings_Oslo Bus' ordinal='12' />
                  <column datatype='real' name='Passengers_1000_Oslo Bus' ordinal='13' />
                  <column datatype='real' name='Duration_hours' ordinal='14' />
                  <column datatype='real' name='Is_Severe' ordinal='15' />
                  <column datatype='integer' name='Incident_Occurred' ordinal='16' />
                  <column datatype='real' name='Vehicle Size_Seats_ Oslo Bus' ordinal='17' />
                  <column datatype='real' name='Capacity Utilization _%_Oslo Bus' ordinal='18' />
                  <column datatype='real' name='Seat Kilometers_1000km_Oslo Bus' ordinal='19' />
                  <column datatype='real' name='Space Kilometers_1000_km_Oslo Bus' ordinal='20' />
                  <column datatype='real' name='Vehicle Kilometers_1000 km_Oslo Bus' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
      <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
      <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
      <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
      <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0rrh2dk10key9918w9cz01hhsimh'>
      <column caption='YearMonthKey' datatype='string' name='[Calculation_1948088316965621760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([YearMonth - Split 2]) + &quot;-&quot; + RIGHT(&quot;00&quot; + STR([YearMonth - Split 1]), 2)' />
      </column>
      <column aggregation='Sum' caption='Month' datatype='integer' name='[YearMonth - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0rrh2dk10key9918w9cz01hhsimh].[YearMonth]'>
        <calculation class='tableau' formula='INT(RIGHT([YearMonth], 2))' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[YearMonth - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0rrh2dk10key9918w9cz01hhsimh].[YearMonth]'>
        <calculation class='tableau' formula='INT(LEFT([YearMonth], 4))' />
      </column>
      <column-instance column='[Calculation_1948088316965621760]' derivation='None' name='[none:Calculation_1948088316965621760:nk]' pivot='key' type='nominal' />
      <column-instance column='[YearMonth - Split 1]' derivation='None' name='[none:YearMonth - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[YearMonth - Split 2]' derivation='None' name='[none:YearMonth - Split 2:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1i2n3ga0pdz8p511ot08f1ebo8pn'>
      <column caption='YearMonthKey ' datatype='string' name='[Calculation_1948088316965720065]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([Year]) + &quot;-&quot; + RIGHT(&quot;00&quot; + STR([Month]), 2)' />
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1948088316965720065]' derivation='None' name='[none:Calculation_1948088316965720065:nk]' pivot='key' type='nominal' />
      <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1rzmslw0sqtg0610q6nsv1wop5t4'>
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column-instance column='[month]' derivation='None' name='[none:month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0bff73603saw3j1g8xy2l1qgwigk' target='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
      <column-mapping>
        <map key='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' value='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.0rrh2dk10key9918w9cz01hhsimh' target='federated.1i2n3ga0pdz8p511ot08f1ebo8pn'>
      <column-mapping>
        <map key='[federated.0rrh2dk10key9918w9cz01hhsimh].[none:Calculation_1948088316965621760:nk]' value='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]' />
        <map key='[federated.0rrh2dk10key9918w9cz01hhsimh].[none:YearMonth - Split 1:ok]' value='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Month:ok]' />
        <map key='[federated.0rrh2dk10key9918w9cz01hhsimh].[none:YearMonth - Split 2:ok]' value='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Year:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.0rrh2dk10key9918w9cz01hhsimh' target='federated.1rzmslw0sqtg0610q6nsv1wop5t4'>
      <column-mapping>
        <map key='[federated.0rrh2dk10key9918w9cz01hhsimh].[none:YearMonth - Split 1:ok]' value='[federated.1rzmslw0sqtg0610q6nsv1wop5t4].[none:month:ok]' />
        <map key='[federated.0rrh2dk10key9918w9cz01hhsimh].[none:YearMonth - Split 2:ok]' value='[federated.1rzmslw0sqtg0610q6nsv1wop5t4].[none:year:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <shared-views>
    <shared-view name='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
      <datasources>
        <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
      </datasources>
      <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
        <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
        <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]'>
        <groupfilter function='level-members' level='[none:route_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' />
      </filter>
    </shared-view>
    <shared-view name='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
      <datasources>
        <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
      </datasources>
      <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
        <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
        <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
        <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
        <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:hour:ok]' member='0' />
          <groupfilter function='member' level='[none:hour:ok]' member='1' />
          <groupfilter function='member' level='[none:hour:ok]' member='2' />
          <groupfilter function='member' level='[none:hour:ok]' member='3' />
          <groupfilter function='member' level='[none:hour:ok]' member='4' />
          <groupfilter function='member' level='[none:hour:ok]' member='5' />
          <groupfilter function='member' level='[none:hour:ok]' member='6' />
          <groupfilter function='member' level='[none:hour:ok]' member='7' />
          <groupfilter function='member' level='[none:hour:ok]' member='8' />
          <groupfilter function='member' level='[none:hour:ok]' member='9' />
          <groupfilter function='member' level='[none:hour:ok]' member='10' />
          <groupfilter function='member' level='[none:hour:ok]' member='11' />
          <groupfilter function='member' level='[none:hour:ok]' member='12' />
          <groupfilter function='member' level='[none:hour:ok]' member='13' />
          <groupfilter function='member' level='[none:hour:ok]' member='14' />
          <groupfilter function='member' level='[none:hour:ok]' member='15' />
          <groupfilter function='member' level='[none:hour:ok]' member='16' />
          <groupfilter function='member' level='[none:hour:ok]' member='17' />
          <groupfilter function='member' level='[none:hour:ok]' member='18' />
          <groupfilter function='member' level='[none:hour:ok]' member='19' />
          <groupfilter function='member' level='[none:hour:ok]' member='20' />
          <groupfilter function='member' level='[none:hour:ok]' member='21' />
          <groupfilter function='member' level='[none:hour:ok]' member='22' />
          <groupfilter function='member' level='[none:hour:ok]' member='23' />
        </groupfilter>
        <target field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' />
      </filter>
      <filter class='categorical' column='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]'>
        <groupfilter function='level-members' level='[none:hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' />
      </filter>
    </shared-view>
    <shared-view name='federated.0bff73603saw3j1g8xy2l1qgwigk'>
      <datasources>
        <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
      </datasources>
      <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
        <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
        <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
        <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
        <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
        <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
        <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
        <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
        <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]'>
        <groupfilter function='level-members' level='[none:route_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]' />
      </filter>
      <filter class='categorical' column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:hour:ok]' member='0' />
          <groupfilter function='member' level='[none:hour:ok]' member='1' />
          <groupfilter function='member' level='[none:hour:ok]' member='2' />
          <groupfilter function='member' level='[none:hour:ok]' member='3' />
          <groupfilter function='member' level='[none:hour:ok]' member='4' />
          <groupfilter function='member' level='[none:hour:ok]' member='5' />
          <groupfilter function='member' level='[none:hour:ok]' member='6' />
          <groupfilter function='member' level='[none:hour:ok]' member='7' />
          <groupfilter function='member' level='[none:hour:ok]' member='8' />
          <groupfilter function='member' level='[none:hour:ok]' member='9' />
          <groupfilter function='member' level='[none:hour:ok]' member='10' />
          <groupfilter function='member' level='[none:hour:ok]' member='11' />
          <groupfilter function='member' level='[none:hour:ok]' member='12' />
          <groupfilter function='member' level='[none:hour:ok]' member='13' />
          <groupfilter function='member' level='[none:hour:ok]' member='14' />
          <groupfilter function='member' level='[none:hour:ok]' member='15' />
          <groupfilter function='member' level='[none:hour:ok]' member='16' />
          <groupfilter function='member' level='[none:hour:ok]' member='17' />
          <groupfilter function='member' level='[none:hour:ok]' member='18' />
          <groupfilter function='member' level='[none:hour:ok]' member='19' />
          <groupfilter function='member' level='[none:hour:ok]' member='20' />
          <groupfilter function='member' level='[none:hour:ok]' member='21' />
          <groupfilter function='member' level='[none:hour:ok]' member='22' />
          <groupfilter function='member' level='[none:hour:ok]' member='23' />
        </groupfilter>
        <target field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' />
      </filter>
      <filter class='categorical' column='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]'>
        <groupfilter function='level-members' level='[none:hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_FA9EBF2BCC454F638D9D0B31217A74C4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Demand Level per Hour by Cluster' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_F85EBCD15B864260A6E4276DF527B8D4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Demand Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Actual vs Predicted'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Benton Sans SemiDemi' fontsize='12'>Actual vs Predicted Passengers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Key_Features_All_Tasks_2023_2024' name='federated.1i2n3ga0pdz8p511ot08f1ebo8pn' />
            <datasource caption='xgb_monthly_predictions' name='federated.0rrh2dk10key9918w9cz01hhsimh' />
          </datasources>
          <datasource-dependencies datasource='federated.0rrh2dk10key9918w9cz01hhsimh'>
            <column caption='Predicted passengers' datatype='real' name='[Calculation_1948088316969017346]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Predicted_Passengers_1000]/1000' />
            </column>
            <column caption='Predicted Passengers 1000' datatype='real' name='[Predicted_Passengers_1000]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1948088316969017346]' derivation='Attribute' name='[attr:Calculation_1948088316969017346:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1948088316969017346]' derivation='Sum' name='[sum:Calculation_1948088316969017346:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i2n3ga0pdz8p511ot08f1ebo8pn'>
            <column caption='YearMonthKey ' datatype='string' name='[Calculation_1948088316965720065]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([Year]) + &quot;-&quot; + RIGHT(&quot;00&quot; + STR([Month]), 2)' />
            </column>
            <column caption='Passengers' datatype='real' name='[Calculation_2688930455622303744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Passengers_1000_Oslo Bus]/1000' />
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Passengers 1000 Oslo Bus' datatype='real' name='[Passengers_1000_Oslo Bus]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2688930455622303744]' derivation='Attribute' name='[attr:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2688930455622303744]' derivation='Avg' name='[avg:Calculation_2688930455622303744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1948088316965720065]' derivation='None' name='[none:Calculation_1948088316965720065:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[attr:Calculation_2688930455622303744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[attr:Calculation_1948088316969017346:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[avg:Calculation_2688930455622303744:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rrh2dk10key9918w9cz01hhsimh].[sum:Calculation_1948088316969017346:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1948088316965720065:nk]' member='&quot;2024-08&quot;' />
              <groupfilter function='member' level='[none:Calculation_1948088316965720065:nk]' member='&quot;2024-09&quot;' />
              <groupfilter function='member' level='[none:Calculation_1948088316965720065:nk]' member='&quot;2024-10&quot;' />
              <groupfilter function='member' level='[none:Calculation_1948088316965720065:nk]' member='&quot;2024-11&quot;' />
              <groupfilter function='member' level='[none:Calculation_1948088316965720065:nk]' member='&quot;2024-12&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]</column>
            <column>[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[Multiple Values]' field-type='quantitative' max='12.699999999999999' min='11.4' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[Multiple Values]' scope='rows' value='Passengers (in thousands)' />
            <format attr='height' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]' value='24' />
            <format attr='tick-color' value='#00000000' />
            <format attr='stroke-size' value='2' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-color' value='#c0c0c0' />
            <format attr='width' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]' value='196' />
            <format attr='font-size' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]' value='8' />
            <format attr='font-size' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[Multiple Values]' value='8' />
            <format attr='text-format' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' id='legend-color' value='8' />
            <format attr='font-size' value='8' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' id='legend-color' value='auto' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' />
              <lod column='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[Multiple Values]</rows>
        <cols>[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[none:Calculation_1948088316965720065:nk]</cols>
      </table>
      <simple-id uuid='{50233523-FEEC-4ED1-9619-8650680DE2C6}' />
    </worksheet>
    <worksheet name='Avg Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Benton Sans SemiDemi' fontsize='12'>Average Arrival Delays Bus Routes in Oslo</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
            <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
            <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
          </datasources>
          <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
            <column caption='Arrival Delay Minutes' datatype='real' name='[arrival_delay_minutes]' role='measure' type='quantitative' />
            <column-instance column='[arrival_delay_minutes]' derivation='Avg' name='[avg:arrival_delay_minutes:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bff73603saw3j1g8xy2l1qgwigk].[Action (Hour)]'>
            <groupfilter function='level-members' level='[hour]' user:ui-action-filter='[Action2_FA9EBF2BCC454F638D9D0B31217A74C4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:arrival_delay_minutes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[Action (Hour)]</column>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]' value='23' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='off' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#ffffffed' />
                <format attr='font-size' value='8' />
                <format attr='font-style' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='1.2523757219314575' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='382' />
                <format attr='maxwidth' value='382' />
                <format attr='minheight' value='200' />
                <format attr='maxheight' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]</rows>
        <cols>[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:arrival_delay_minutes:qk]</cols>
      </table>
      <simple-id uuid='{5725D2EF-29B0-47B5-AA7D-82FA33C9AD36}' />
    </worksheet>
    <worksheet name='Avg Predicted Passengers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Candara' fontsize='14'>Average Predicted Passengers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
            <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
            <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
          </datasources>
          <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
            <column-instance column='[predicted_passengers]' derivation='Avg' name='[avg:predicted_passengers:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:ok]' pivot='key' type='ordinal' />
            <column caption='Predicted Passengers' datatype='real' name='[predicted_passengers]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Weekday' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:weekday:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:weekday:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</column>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' value='52' />
            <format attr='text-format' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
            <format attr='width' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:weekday:ok]' value='68' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' palette='red_blue_white_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' value='Select Hour'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Candara' fontsize='9'>Select Hour</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' />
              <text column='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:weekday:ok]</rows>
        <cols>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</cols>
      </table>
      <simple-id uuid='{1BAD820C-BE17-472C-A494-092C5A0CE2D0}' />
    </worksheet>
    <worksheet name='Bubble Demand Level per Hour by Cluster'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Benton Sans SemiDemi' fontsize='12'>Demand Level per Hour by Cluster</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
            <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
          </datasources>
          <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
            <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='quantitative' />
            <column-instance column='[cluster]' derivation='Count' name='[cnt:cluster:qk]' pivot='key' type='quantitative' />
            <column caption='Demand Level' datatype='string' name='[demand_level]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[demand_level]' derivation='None' name='[none:demand_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
              <size column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[cnt:cluster:qk]' />
              <text column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C63F261D-5D53-4FDA-B3A9-1F4F3477ED0C}' />
    </worksheet>
    <worksheet name='Demand Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Candara' fontsize='14'>Demand Distribution</run>
            <run fontalignment='1'>Ã&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
            <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
          </datasources>
          <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
            <column caption='Avg Delay Minutes' datatype='real' name='[avg_delay_minutes]' role='measure' type='quantitative' />
            <column caption='Demand Level' datatype='string' name='[demand_level]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[demand_level]' derivation='None' name='[none:demand_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[avg_delay_minutes]' derivation='Sum' name='[sum:avg_delay_minutes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' direction='ASC' using='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[sum:avg_delay_minutes:qk]' />
          <slices>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
              <size column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
              <lod column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
              <text column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='4.2105045318603516' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{060C82F9-02D8-434E-BD5F-AF948DEDC556}' />
    </worksheet>
    <worksheet name='Demand Level per Hour by Cluster'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Candara' fontsize='14'>Demand Level per Hour by Cluster</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
            <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
          </datasources>
          <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
            <column caption='Avg Delay Minutes' datatype='real' name='[avg_delay_minutes]' role='measure' type='quantitative' />
            <column caption='Demand Level' datatype='string' name='[demand_level]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[demand_level]' derivation='None' name='[none:demand_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column caption='Predicted Passengers' datatype='real' name='[predicted_passengers]' role='measure' type='quantitative' />
            <column-instance column='[avg_delay_minutes]' derivation='Sum' name='[sum:avg_delay_minutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted_passengers]' derivation='Sum' name='[sum:predicted_passengers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[Action (Demand Level)]'>
            <groupfilter function='level-members' level='[demand_level]' user:ui-action-filter='[Action3_F85EBCD15B864260A6E4276DF527B8D4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Very High&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Very Low&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</column>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[Action (Demand Level)]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' value='25' />
            <format attr='width' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
            <format attr='width' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' value='76' />
            <format attr='font-size' data-class='subtotal' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' value='9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' value='bold' />
            <format attr='font-family' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' value='Tableau Semibold' />
            <format attr='color' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' value='#555555' />
            <format attr='font-size' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' value='8' />
            <format attr='font-size' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' value='8' />
            <format attr='font-weight' field='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' value='bold' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' />
              <lod column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[sum:avg_delay_minutes:qk]' />
              <lod column='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[sum:predicted_passengers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/plus' />
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]</rows>
        <cols>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{EDE40EB9-67BE-4F1F-B62B-927B774EE3E0}' />
    </worksheet>
    <worksheet name='Lines with action'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Candara' fontsize='14'>Routs with Recomended Actions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
          </datasources>
          <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
            <column datatype='integer' name='[Add 1 extra bus]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Add 2 extra buses]' role='measure' type='quantitative' />
            <column caption='Condition all actions' datatype='integer' name='[Calculation_1767662857921413120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Add 1 extra bus] + [Add 2 extra buses] + [Explore delay]' />
            </column>
            <column datatype='integer' name='[Explore delay]' role='measure' type='quantitative' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column-instance column='[Add 1 extra bus]' derivation='Sum' name='[sum:Add 1 extra bus:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Add 2 extra buses]' derivation='Sum' name='[sum:Add 2 extra buses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1767662857921413120]' derivation='Sum' name='[sum:Calculation_1767662857921413120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Explore delay]' derivation='Sum' name='[sum:Explore delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' scope='cols' value='All recomended actions' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='8' />
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='8' />
            <format attr='font-weight' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='bold' />
            <format attr='font-weight' data-class='subtotal' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='normal' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='bold' />
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='8' />
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='8' />
            <format attr='font-weight' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='bold' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='8' />
            <format attr='font-weight' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' value='normal' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[:Measure Names]' value='Select Recomendation'>
              <formatted-text>
                <run bold='true' fontcolor='#555555' fontname='Candara'>Select Recomendation</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='Select Route Id'>
              <formatted-text>
                <run bold='true' fontcolor='#555555' fontname='Candara'>Select Route Id</run>
              </formatted-text>
            </format>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Add 1 extra bus:qk]' />
              <text column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Add 2 extra buses:qk]' />
              <text column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Explore delay:qk]' />
              <text column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='2'>&lt;</run>
                <run fontalignment='2'>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]</run>
                <run fontalignment='2'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</rows>
        <cols>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]</cols>
      </table>
      <simple-id uuid='{187F6AD9-66E9-46F4-AC92-880494CD7AEC}' />
    </worksheet>
    <worksheet name='Ruter'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Candara' fontsize='14'>Top 10 Routes with Recomended Actions </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
          </datasources>
          <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
            <column datatype='integer' name='[Add 1 extra bus]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Add 2 extra buses]' role='measure' type='quantitative' />
            <column caption='Condition all actions' datatype='integer' name='[Calculation_1767662857921413120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Add 1 extra bus] + [Add 2 extra buses] + [Explore delay]' />
            </column>
            <column datatype='integer' name='[Explore delay]' role='measure' type='quantitative' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column-instance column='[Add 1 extra bus]' derivation='Sum' name='[sum:Add 1 extra bus:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1767662857921413120]' derivation='Sum' name='[sum:Calculation_1767662857921413120:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' direction='ASC' using='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' />
          <slices>
            <column>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='12' />
            <format attr='font-weight' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='bold' />
            <format attr='font-size' field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' />
              <size column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' />
              <lod column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Add 1 extra bus:qk]' />
              <text column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' />
              <text column='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route Id:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]>]]></run>
                <run>Ã&#10;</run>
                <run bold='true'><![CDATA[<[federated.04yd70t1x89wrv12ciqmo17g5u4e].[sum:Calculation_1767662857921413120:qk]>]]></run>
                <run>Ã&#10;</run>
                <run bold='true'>Ã  </run>
                <run>Ã&#10;</run>
                <run bold='true'>Ã </run>
                <run>Ã&#10;</run>
                <run bold='true'>Ã </run>
                <run>Ã&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{2D711873-F83A-40A1-9F29-7470A64923EA}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
            <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
            <datasource caption='Demand Level per Hour by Cluster (k=5)' name='federated.05fuuvf0bm3chq1cvity70q9tuwv' />
            <datasource caption='xgb_monthly_predictions' name='federated.0rrh2dk10key9918w9cz01hhsimh' />
          </datasources>
          <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05fuuvf0bm3chq1cvity70q9tuwv'>
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
            <column-instance column='[predicted_passengers]' derivation='Avg' name='[avg:predicted_passengers:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column caption='Predicted Passengers' datatype='real' name='[predicted_passengers]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rrh2dk10key9918w9cz01hhsimh'>
            <column caption='Year Month' datatype='string' name='[YearMonth]' role='dimension' type='nominal' />
            <column-instance column='[YearMonth]' derivation='None' name='[none:YearMonth:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</column>
            <column>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</column>
            <column>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:qk]' field-type='quantitative' max='23' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' />
              <color column='[federated.0rrh2dk10key9918w9cz01hhsimh].[none:YearMonth:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]</rows>
        <cols>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:qk]</cols>
      </table>
      <simple-id uuid='{ABA19035-90C2-4ED6-BC1B-384C3B679972}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Tw Cen MT' fontsize='22'>Oslo Bus Transport Optimisation</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='route_action_counts' name='federated.04yd70t1x89wrv12ciqmo17g5u4e' />
        <datasource caption='xgb_final_merged_rl_without_nan' name='federated.0bff73603saw3j1g8xy2l1qgwigk' />
      </datasources>
      <datasource-dependencies datasource='federated.04yd70t1x89wrv12ciqmo17g5u4e'>
        <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
        <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0bff73603saw3j1g8xy2l1qgwigk'>
        <column aggregation='Sum' caption='Hour' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
        <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='48' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone fixed-size='35' h='4375' id='44' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#d4d4d4' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#f5eddcf2' />
                </zone-style>
              </zone>
              <zone h='93625' id='34' param='horz' type-v2='layout-flow' w='98400' x='800' y='5375'>
                <zone fixed-size='160' h='93625' id='15' is-fixed='true' param='vert' type-v2='layout-flow' w='98400' x='800' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='29375' id='19' name='Demand Level per Hour by Cluster' w='61100' x='2200' y='36125'>
          <layout-cache fixed-size-h='333' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#d4d4d4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='31375' id='23' name='Avg Predicted Passengers' w='96100' x='1800' y='66250'>
          <layout-cache fixed-size-h='289' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='margin' value='0' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='29750' id='29' name='Demand Distribution' w='19300' x='63900' y='36000'>
          <layout-cache fixed-size-h='143' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='28500' id='46' name='Lines with action' w='47600' x='50200' y='6500'>
          <layout-cache fixed-size-h='6702' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='10625' id='49' mode='dropdown' name='Lines with action' param='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[:Measure Names]' show-filter-state='false' type-v2='filter' values='database' w='15300' x='83000' y='44625'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='margin' value='6' />
            <format attr='padding' value='6' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='11250' id='54' mode='checkdropdown' name='Avg Predicted Passengers' param='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' type-v2='filter' values='database' w='15100' x='83100' y='55000'>
          <zone-style>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='margin' value='4' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='8625' id='55' mode='checkdropdown' name='Lines with action' param='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' type-v2='filter' values='database' w='14100' x='83700' y='36000'>
          <zone-style>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
        <zone h='28750' id='56' name='Avg Delay' w='47300' x='2200' y='6375'>
          <layout-cache fixed-size-h='7683' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='background-color' value='#fefaf1' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Tw Cen MT' fontsize='22'>Oslo Bus Transport Optimisation</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='80' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='79' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='35' h='4375' id='44' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#d4d4d4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddcf2' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='28750' id='56' is-fixed='true' name='Avg Delay' w='47300' x='2200' y='6375'>
                  <layout-cache fixed-size-h='7683' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone h='10625' id='49' mode='dropdown' name='Lines with action' param='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[:Measure Names]' show-filter-state='false' type-v2='filter' values='database' w='15300' x='83000' y='44625'>
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone h='8625' id='55' mode='checkdropdown' name='Lines with action' param='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' type-v2='filter' values='database' w='14100' x='83700' y='36000'>
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='224' h='28500' id='46' is-fixed='true' name='Lines with action' w='47600' x='50200' y='6500'>
                  <layout-cache fixed-size-h='6702' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='29750' id='29' is-fixed='true' name='Demand Distribution' w='19300' x='63900' y='36000'>
                  <layout-cache fixed-size-h='143' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='231' h='29375' id='19' is-fixed='true' name='Demand Level per Hour by Cluster' w='61100' x='2200' y='36125'>
                  <layout-cache fixed-size-h='333' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#d4d4d4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone h='11250' id='54' mode='checkdropdown' name='Avg Predicted Passengers' param='[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:hour:ok]' type-v2='filter' values='database' w='15100' x='83100' y='55000'>
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31375' id='23' is-fixed='true' name='Avg Predicted Passengers' w='96100' x='1800' y='66250'>
                  <layout-cache fixed-size-h='289' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{74808C57-F88B-4BF8-BCDC-F9C1C3727DF6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='167'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{120FE160-ADD9-4C37-A888-71D78F424940}' />
    </window>
    <window class='worksheet' name='Actual vs Predicted'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1i2n3ga0pdz8p511ot08f1ebo8pn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{35E52A3A-C68F-4486-A713-8FDB7D142049}' />
    </window>
    <window class='worksheet' name='Demand Level per Hour by Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' type='color' />
            <card param='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]</field>
            <field>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B37E0FC8-5E33-4FD6-B089-3910D7F4DC3D}' />
    </window>
    <window class='worksheet' name='Bubble Demand Level per Hour by Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C61784C5-F13D-44ED-A5E0-84C2D028390C}' />
    </window>
    <window class='worksheet' name='Demand Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:demand_level:nk]</field>
            <field>[federated.05fuuvf0bm3chq1cvity70q9tuwv].[none:hour:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90222B94-3F92-4CAC-AF02-89DACFA95C1C}' />
    </window>
    <window class='worksheet' name='Avg Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:route_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAB653AD-3F73-4834-B211-F40AB21EB2EA}' />
    </window>
    <window class='worksheet' name='Avg Predicted Passengers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bff73603saw3j1g8xy2l1qgwigk].[avg:predicted_passengers:qk]</field>
            <field>[federated.0bff73603saw3j1g8xy2l1qgwigk].[none:weekday:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B43850ED-E141-4F18-8E4D-E53CC6635A15}' />
    </window>
    <window class='worksheet' name='Ruter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{376C5561-418C-451C-A896-D1BF6AF185FE}' />
    </window>
    <window class='worksheet' name='Lines with action'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[:Measure Names]</field>
            <field>[federated.04yd70t1x89wrv12ciqmo17g5u4e].[none:route_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A09BC253-8466-4709-8CA4-27EA1122F666}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg Delay' />
        <viewpoint name='Avg Predicted Passengers' />
        <viewpoint name='Demand Distribution' />
        <viewpoint name='Demand Level per Hour by Cluster' />
        <viewpoint name='Lines with action'>
          <highlight field='[federated.04yd70t1x89wrv12ciqmo17g5u4e].[:Measure Names]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{851D2FF8-7624-4605-9774-6E14B1E0FA41}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Actual vs Predicted' width='384'>
      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
      5IAOSZKklPl/YE+n+jQ1wfIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Avg Delay' width='384'>
      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
    </thumbnail>
    <thumbnail height='362' name='Avg Predicted Passengers' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Bubble Demand Level per Hour by Cluster' width='384'>
      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
      u8sgogv8H96jJxoEepA3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Demand Distribution' width='384'>
      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
      t1L+IsVW3Cc/6FNq60MKk1dkccC75h29C6ilq0VzZi3UdYVJ/XR3s1aVxXWst1fxohqN9Peo
      J+1paXTiIZAfzdd1tZ52nBhVbWe76htrFHGhNuw5qU999A6troqoaHSDdrQMaYZzGgxK9Y3P
      XKu451SbqNW3dhzXBytK1RJU6ZrCi/XKadfuE1p2y3J9bmW1hnun6a/XH5d3w1LVJA6oeTih
      nqBAa/LSaupLqbnH6Q9mXHgm4QWBKuvKdexIp+oXFKv7YJtKG2cp5knDJ46pW9W67d4V8uVU
      FH1dJ3a3qXxllVwypZ4eTzfdv1axiKdUr69g06vq6lqqMq9bvX1xNcwrOW9poVpe2KDWF89u
      ghTPUd35Y40Mq3l3mxb9/t2qrctXqq9bp5vOXUKLFVfphvvXKk8Z5aX61N4zfNHvnxsd0NAz
      j2v07KanlTjeLc2YfPzw5F71v7BbxX/8FRUtmylJGvZP6vSm8WPFlPfxL6hkVYMkpyGvQ72b
      jyqjS/9w+aXL5OcllT65V0H5KrmBIwoHkorPvFY68dK4lU4pvftxKf8m5X7sXxTJjUnhiLzg
      AaX2P63Yktukns1KHT2oYM03lbPijuxZ6eAhha0bLrEGUxe59i+Vd+ens69Je4MyP/mGYvc8
      pFhtfXZbIh0aPdglXekrhcBVNqUAOOeUCZ2KcnO1r79Pw5GUgpwCVZfF9PqBI6qfs0SD3XsV
      jZVfMEPP83TTNdV6ZF+rOnq6dOOdi7PzDEO9ueWA2gp9uaJKLSkNNNLh6dqGasU9SfJUPrdW
      pc+9qme3j2jhtbM1yTH0hOW4cOyeRegkTwqCmOqrA+3c06qgrFILi3u168Bx9eRM0/TJrlB4
      vsoXztTex44pkaxT14keVd2xQpI00jOgwcP79ezXDpwdvXxVZXayWExzb16gWCQbv6CoRNPr
      CtSyp1UK2hRvqFNB7PyF+Zr5gVt1/W2zJUnpoSFtfvjZC1YpTCeVTkq5xXmX2PpxLnkt2pOi
      UXnRcY/9i1+zCNuPKYxXKadh5iXn6Z09ZPc05TusudUKZjYo1bRJbvFKha0b5HKXyi8rVXhi
      3HiZfmV62iVVKL3tezpzghkOJeRGmuVGUlLPQbnYDEXnrLg6N3g9f+LXnqfzLnpejaUCV91l
      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
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQA
      AIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADA
      KAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwi
      AABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIA
      AEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABg
      FAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEb9P4QBFzWayS7TAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='338' name='Demand Level per Hour by Cluster' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Lines with action' width='384'>
      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
      HgA/AIKl5UzejsQJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Ruter' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      xXUdvXfEt/5/CTfM9zgkyg0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
